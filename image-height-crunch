#!/bin/bash
# Process *.jpg images recursively
#
# Uses Imagemagick
#
# Instructions:
# * Add this file in your Bash path
# * Make it executable (`sudo chmod +x /usr/local/bin/image-crunch`)
# * In your terminal, move into the images directory
# * Enter `image-crunch`
# * Select a width
# * Select a name for the new directory
# The script copies all files and subdirectories into the newly specified subdirectory.
# It then applies an imagemagick command to all files in this directory.
# TODO: User specified image quality

# Get user inputs
# ------------------------------------------------------------------------------
# Width
echo -e "Please enter the required image height:"
read  IMAGE_HEIGHT
# COMPRESSION
read -r -p "Do you want to compress images? [y/N] " response
if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]
then
    COMPRESSION=true
else
    COMPRESSION=false
fi
read -e -p "Enter Directory: " -i "processed-images" PROCDIR

# Make the new subdirectory
mkdir $PROCDIR

if [ $? != "0" ]; then  # Note: "0" is the return from successful completion of the previous operation in BASH.
 echo "Directory creation failed"
 exit 1
else

  echo "Directory created"

fi

# rsync options
roptions=(
-r
--verbose
--exclude=${PROCDIR}
)

# Copy files using rsync
rsync "${roptions[@]}" $PWD/ /$PWD/$PROCDIR

cd $PWD/$PROCDIR

if [ true == $COMPRESSION ]
then
  # Imagemagick command on all files, recursive, with COMPRESSION
  find ./ \( -name "*.jpg" -o -name "*.JPG" \) -exec mogrify -geometry x$IMAGE_HEIGHT -density 72 -quality "70%" {} \;
else
  # Imagemagick command on all files, recursive, No COMPRESSION
  find ./ \( -name "*.jpg" -o -name "*.JPG" \) -exec mogrify -geometry x$IMAGE_HEIGHT -density 72 {} \;
fi
